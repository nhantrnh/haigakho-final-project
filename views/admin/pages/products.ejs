<div class="p-6">
  <!-- Header -->
  <div class="mb-8">
    <h2 class="text-2xl font-bold text-gray-800">Products Management</h2>
    <p class="text-gray-600 mt-1">Manage and organize your products</p>
  </div>

  <!-- Action Bar -->
  <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-6">
    <div class="flex flex-col md:flex-row justify-between gap-4">
      <!-- Search and Filters -->
      <div class="flex flex-1 gap-4">
        <div class="flex-1">
          <div class="relative">
            <input type="text" name="search" value="<%= search %>" placeholder="Search products..." class="w-full pl-10 pr-4 py-2.5 text-gray-900 placeholder-gray-500 bg-gray-50 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#3b5d50] focus:border-transparent transition-shadow" />
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <i class="fas fa-search text-gray-400"></i>
            </div>
          </div>
        </div>

        <div class="w-64">
          <select name="category" class="w-full px-4 py-2.5 text-gray-900 bg-gray-50 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#3b5d50] focus:border-transparent">
            <option value="">All Categories</option>
            <% categories.forEach(cat => { %>
            <option value="<%= cat._id %>" <%= category === cat._id.toString() ? 'selected' : '' %>>
              <%= cat.name %>
            </option>
            <% }) %>
          </select>
        </div>
      </div>

      <!-- Add sort controls after category filter -->
      <div class="w-64">
        <select id="sortField" class="w-full px-4 py-2.5 text-gray-900 bg-gray-50 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#3b5d50] focus:border-transparent">
          <option value="createdAt">Creation Time</option>
          <option value="price">Price</option>
          <option value="totalPurchased">Total Purchased</option>
        </select>
      </div>

      <div class="w-48">
        <select id="sortOrder" class="w-full px-4 py-2.5 text-gray-900 bg-gray-50 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-[#3b5d50] focus:border-transparent">
          <option value="desc">Descending</option>
          <option value="asc">Ascending</option>
        </select>
      </div>

      <!-- Add Product Button -->
      <a href="/admin/products/create" class="px-6 py-2.5 bg-[#3b5d50] text-gray-800 rounded-xl hover:bg-[#2f4a40] transition-colors inline-flex items-center justify-center">
        <i class="fas fa-plus mr-2"></i> Add Product
      </a>
    </div>
  </div>

  <!-- Products Table -->
  <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Product
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Category
            </th>
            <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
              Price
            </th>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Stock
            </th>
            <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
              Actions
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% products.forEach(product => { %>
          <tr class="hover:bg-gray-50 transition-colors">
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="h-16 w-16 flex-shrink-0">
                  <img src="<%= product.imageUrl[0] %>" alt="<%= product.name %>" class="h-16 w-16 rounded-lg object-cover shadow-sm" />
                </div>
                <div class="ml-4">
                  <div class="text-sm font-medium text-gray-900">
                    <%= product.name %>
                  </div>
                  <div class="text-sm text-gray-500">
                    ID: <%= product._id %>
                  </div>
                </div>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                <%= product.categoryId.name %>
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm">
              <span class="font-medium text-gray-900">$<%= product.price %></span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-center">
              <span class="px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full <%= product.stock > 0 ? 'bg-blue-100 text-blue-800' : 'bg-red-100 text-red-800' %>">
                <%= product.stock %>
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
              <a href="/admin/products/<%= product._id %>/edit" class="text-[#3b5d50] hover:text-[#2f4a40] mr-3">
                <i class="fas fa-edit"></i>
              </a>
              <button onclick="deleteProduct('<%= product._id %>')" class="text-red-600 hover:text-red-900">
                <i class="fas fa-trash"></i>
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <!-- Add this after the table -->
    <div class="px-6 py-4 border-t border-gray-200 bg-gray-50">
      <div class="flex justify-between items-center">
        <div class="text-sm text-gray-700" id="pageInfo"></div>
        <div class="pagination"></div>
      </div>
    </div>
  </div>
</div>

<script>
  let currentPage = 1;
  const limit = 10;

  async function loadProducts(page = 1) {
    try {
      // Show loading state
      document.querySelector("tbody").innerHTML = `
          <tr>
            <td colspan="5" class="text-center py-4">
              <div class="inline-flex items-center">
                <svg class="animate-spin h-5 w-5 mr-3 text-[#3b5d50]" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Loading...
              </div>
            </td>
          </tr>
        `;

      const searchTerm = document.querySelector('input[name="search"]').value;
      const category = document.querySelector('select[name="category"]').value;
      const sortField = document.getElementById("sortField").value;
      const sortOrder = document.getElementById("sortOrder").value;

      console.log(category);

      const response = await fetch(
        `/admin/api/products?page=${page}&search=${searchTerm}&category=${category}&sort=${sortField}&order=${sortOrder}`
      );

      const data = await response.json();

      if (data.success) {
        // Update table body
        document.querySelector("tbody").innerHTML = data.products
          .map(
            (product) => `
          <tr class="hover:bg-gray-50 transition-colors">
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="h-16 w-16 flex-shrink-0">
                  <img src="${product.imageUrl[0]}" 
                       alt="${product.name}" 
                       class="h-16 w-16 rounded-lg object-cover shadow-sm">
                </div>
                <div class="ml-4">
                  <div class="text-sm font-medium text-gray-900">${
                    product.name
                  }</div>
                  <div class="text-sm text-gray-500">ID: ${product._id}</div>
                </div>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                ${product.categoryId.name}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-right text-sm">
              <span class="font-medium text-gray-900">$${product.price}</span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-center">
              <span class="px-3 py-1 inline-flex text-sm leading-5 font-semibold rounded-full ${
                product.stock > 0
                  ? "bg-blue-100 text-blue-800"
                  : "bg-red-100 text-red-800"
              }">
                ${product.stock}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
              <a href="/admin/products/${product._id}/edit" 
                 class="text-[#3b5d50] hover:text-[#2f4a40] mr-3">
                <i class="fas fa-edit"></i>
              </a>
              <button onclick="deleteProduct('${product._id}')" 
                      class="text-red-600 hover:text-red-900">
                <i class="fas fa-trash"></i>
              </button>
            </td>
          </tr>
        `
          )
          .join("");
      }

      // Update pagination
      const pagination = document.querySelector(".pagination");
      if (pagination) {
        pagination.innerHTML = renderPagination(
          data.currentPage,
          data.totalPages
        );
      }

      currentPage = page;
    } catch (error) {
      console.error("Error loading products:", error);
      showToast("error", "Failed to load products");
    }
  }

  function renderPagination(currentPage, totalPages) {
    let html = '<div class="flex space-x-2">';

    if (currentPage > 1) {
      html += `<button onclick="loadProducts(${
        currentPage - 1
      })" class="px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Previous</button>`;
    }

    for (let i = 1; i <= totalPages; i++) {
      if (i === currentPage) {
        html += `<button class="px-4 py-2 border border-[#3b5d50] text-gray-400 bg-[#3b5d50] rounded-lg text-sm font-medium">${i}</button>`;
      } else {
        html += `<button onclick="loadProducts(${i})" class="px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">${i}</button>`;
      }
    }

    if (currentPage < totalPages) {
      html += `<button onclick="loadProducts(${
        currentPage + 1
      })" class="px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Next</button>`;
    }

    html += "</div>";
    return html;
  }

  // Event Listeners
  document.querySelector('input[name="search"]').addEventListener(
    "keyup",
    debounce(() => loadProducts(1), 500)
  );
  document
    .querySelector('select[name="category"]')
    .addEventListener("change", () => loadProducts(1));
  document
    .getElementById("sortField")
    .addEventListener("change", () => loadProducts(1));
  document
    .getElementById("sortOrder")
    .addEventListener("change", () => loadProducts(1));

  // Debounce function
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Initial load
  loadProducts(1);
</script>